// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prid_2021_a06.Models;

namespace prid_2021_a06.Migrations
{
    [DbContext(typeof(PridContext))]
    partial class PridContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("prid_2021_a06.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("SectionId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Content = "U ll find it by yourself",
                            Position = 0,
                            SectionId = 1,
                            Title = "Stars: what makes up a star? Nucleosynthesis? HR Diagrams...what happens in the life of a star?"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 3,
                            Content = "Uranus",
                            Position = 1,
                            SectionId = 1,
                            Title = "Planets"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Content = "Dark Sidious",
                            Position = 0,
                            SectionId = 2,
                            Title = "Dark Matter / Dark Energy"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Content = "ITES",
                            Position = 0,
                            SectionId = 3,
                            Title = "SETI"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            Content = "Les gardiens de la galaxie",
                            Position = 1,
                            SectionId = 3,
                            Title = "Size - SS, Galaxy, Universe"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            Content = "Lauch in 3 2 1...",
                            Position = 2,
                            SectionId = 3,
                            Title = "Constellations: Patterns/myths/stories - go to a planetarium show. UTD, UNT, UTA - We should research at TAS"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 1,
                            Content = "And the sun was",
                            Position = 3,
                            SectionId = 3,
                            Title = "Poster for Observation Day"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 5,
                            Content = "Let' write something here",
                            Position = 4,
                            SectionId = 3,
                            Title = "Observatories map, light pollution map"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 2,
                            Content = "Hpw do u call someone with no bady and no noze ? Nobody knows",
                            Position = 0,
                            SectionId = 4,
                            Title = "Deep Sky Stacker"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 3,
                            Content = "Don't tell me that",
                            Position = 1,
                            SectionId = 4,
                            Title = "Astrometrica"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 1,
                            Content = "Aliens are coming for us",
                            Position = 0,
                            SectionId = 5,
                            Title = "Deep Sky Objects Browser"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            Content = "Astar",
                            Position = 1,
                            SectionId = 5,
                            Title = "Vstar"
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 2,
                            Content = "Y = aX + b",
                            Position = 2,
                            SectionId = 5,
                            Title = "Field of View Calculator"
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 5,
                            Content = "Make a wish",
                            Position = 0,
                            SectionId = 6,
                            Title = "Update comets"
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 5,
                            Content = "Boummmmm",
                            Position = 1,
                            SectionId = 6,
                            Title = "Supernovae sightings"
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 5,
                            Content = "Astrometric",
                            Position = 2,
                            SectionId = 6,
                            Title = "Photometric"
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 3,
                            Content = "Naked body",
                            Position = 3,
                            SectionId = 6,
                            Title = "Astronomy with the naked eye"
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 2,
                            Content = "",
                            Position = 1,
                            SectionId = 7,
                            Title = "Action game UI redisign"
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 4,
                            Content = "",
                            Position = 2,
                            SectionId = 7,
                            Title = "Dynamic staged battles"
                        },
                        new
                        {
                            Id = 21,
                            AuthorId = 1,
                            Content = "",
                            Position = 3,
                            SectionId = 7,
                            Title = "Armor plates"
                        },
                        new
                        {
                            Id = 22,
                            AuthorId = 3,
                            Content = "",
                            Position = 4,
                            SectionId = 7,
                            Title = "Skill based matchmaking"
                        },
                        new
                        {
                            Id = 23,
                            AuthorId = 3,
                            Content = "",
                            Position = 0,
                            SectionId = 8,
                            Title = "New faces for soldiers"
                        },
                        new
                        {
                            Id = 24,
                            AuthorId = 3,
                            Content = "",
                            Position = 1,
                            SectionId = 8,
                            Title = "Battle report upgrade"
                        },
                        new
                        {
                            Id = 25,
                            AuthorId = 1,
                            Content = "",
                            Position = 0,
                            SectionId = 9,
                            Title = "Clan system"
                        },
                        new
                        {
                            Id = 26,
                            AuthorId = 4,
                            Content = "",
                            Position = 1,
                            SectionId = 9,
                            Title = "Weapons cone fire rework"
                        },
                        new
                        {
                            Id = 27,
                            AuthorId = 1,
                            Content = "",
                            Position = 2,
                            SectionId = 9,
                            Title = "New evolved AI for assault battles and skirmish"
                        },
                        new
                        {
                            Id = 28,
                            AuthorId = 2,
                            Content = "",
                            Position = 3,
                            SectionId = 9,
                            Title = "New terrain textures"
                        },
                        new
                        {
                            Id = 29,
                            AuthorId = 3,
                            Content = "",
                            Position = 4,
                            SectionId = 9,
                            Title = "Airfield map rework"
                        },
                        new
                        {
                            Id = 30,
                            AuthorId = 4,
                            Content = "",
                            Position = 5,
                            SectionId = 9,
                            Title = "Graphic assets rework"
                        },
                        new
                        {
                            Id = 31,
                            AuthorId = 4,
                            Content = "",
                            Position = 6,
                            SectionId = 9,
                            Title = "Tech upgrade: Evaluating alternative hosting solutions to provide better performance and stability for our players"
                        },
                        new
                        {
                            Id = 32,
                            AuthorId = 2,
                            Content = "",
                            Position = 0,
                            SectionId = 10,
                            Title = "Stability: issues related to ray tracing on next gen consoles"
                        },
                        new
                        {
                            Id = 33,
                            AuthorId = 2,
                            Content = "",
                            Position = 1,
                            SectionId = 10,
                            Title = "Splitscreen: visual issues"
                        },
                        new
                        {
                            Id = 34,
                            AuthorId = 1,
                            Content = "",
                            Position = 2,
                            SectionId = 10,
                            Title = "Animations: leveling up"
                        },
                        new
                        {
                            Id = 35,
                            AuthorId = 3,
                            Content = "",
                            Position = 0,
                            SectionId = 11,
                            Title = "Ring of fire: unintended behavior after update"
                        },
                        new
                        {
                            Id = 36,
                            AuthorId = 1,
                            Content = "",
                            Position = 1,
                            SectionId = 11,
                            Title = "Trapper challenge: progress stops at 255/500"
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 2,
                            Content = "",
                            Position = 0,
                            SectionId = 7,
                            Title = "Captured vehicles feature"
                        },
                        new
                        {
                            Id = 37,
                            AuthorId = 4,
                            Content = "",
                            Position = 0,
                            SectionId = 12,
                            Title = "Marie-jeanne lance le cochonet"
                        },
                        new
                        {
                            Id = 38,
                            AuthorId = 4,
                            Content = "",
                            Position = 0,
                            SectionId = 13,
                            Title = "Jean ben guigui lance la premiere boule et rate le terrain"
                        },
                        new
                        {
                            Id = 39,
                            AuthorId = 2,
                            Content = "",
                            Position = 1,
                            SectionId = 13,
                            Title = "Papy fourmi lance une boule et tombe par terre"
                        },
                        new
                        {
                            Id = 40,
                            AuthorId = 2,
                            Content = "",
                            Position = 2,
                            SectionId = 13,
                            Title = "Marie-jeanne perds son dentier "
                        },
                        new
                        {
                            Id = 41,
                            AuthorId = 4,
                            Content = "",
                            Position = 3,
                            SectionId = 13,
                            Title = "Michel lance sa canne au lieu de sa boule"
                        },
                        new
                        {
                            Id = 42,
                            AuthorId = 5,
                            Content = "",
                            Position = 4,
                            SectionId = 13,
                            Title = "Marrie-Jeanne part aux toilettes"
                        },
                        new
                        {
                            Id = 43,
                            AuthorId = 5,
                            Content = "",
                            Position = 5,
                            SectionId = 13,
                            Title = "Jean ben guigui : Mais elle est ou Jeanne"
                        },
                        new
                        {
                            Id = 44,
                            AuthorId = 1,
                            Content = "",
                            Position = 0,
                            SectionId = 14,
                            Title = "10 minutes plus tard les seniors changent de coté"
                        },
                        new
                        {
                            Id = 45,
                            AuthorId = 2,
                            Content = "",
                            Position = 0,
                            SectionId = 15,
                            Title = "Patrick Sébastion nous fait une de ses chasons prefs"
                        },
                        new
                        {
                            Id = 46,
                            AuthorId = 1,
                            Content = "",
                            Position = 0,
                            SectionId = 16,
                            Title = "La maison de repos se prends une quitte"
                        },
                        new
                        {
                            Id = 47,
                            AuthorId = 5,
                            Content = "",
                            Position = 0,
                            SectionId = 17,
                            Title = "Jean bernard entre dans la cabine pour retirer ses vetements"
                        },
                        new
                        {
                            Id = 48,
                            AuthorId = 4,
                            Content = "",
                            Position = 0,
                            SectionId = 18,
                            Title = "Suzanne marche sur la plage, et ses seins aussi"
                        },
                        new
                        {
                            Id = 49,
                            AuthorId = 5,
                            Content = "",
                            Position = 1,
                            SectionId = 18,
                            Title = "Gorge joue a la raquette, et marche sur le seins de Suzanne"
                        },
                        new
                        {
                            Id = 50,
                            AuthorId = 4,
                            Content = "",
                            Position = 2,
                            SectionId = 18,
                            Title = "Harmand et Madeleine jouent aux boules, mais pas la pétanque"
                        },
                        new
                        {
                            Id = 51,
                            AuthorId = 4,
                            Content = "",
                            Position = 0,
                            SectionId = 19,
                            Title = "Maintenant 3h que nicole bave dans une huitre et la remange"
                        },
                        new
                        {
                            Id = 52,
                            AuthorId = 4,
                            Content = "",
                            Position = 1,
                            SectionId = 19,
                            Title = "Gaston déguste un bon steak"
                        },
                        new
                        {
                            Id = 53,
                            AuthorId = 5,
                            Content = "",
                            Position = 0,
                            SectionId = 20,
                            Title = "Kevin est parti acheté une baguette, maheureusement la caissière n'a pas squanné la bonne"
                        },
                        new
                        {
                            Id = 54,
                            AuthorId = 4,
                            Content = "",
                            Position = 1,
                            SectionId = 20,
                            Title = "Francoise faisait ses courses, mes n'a pas trouvé de crème solaire"
                        },
                        new
                        {
                            Id = 55,
                            AuthorId = 5,
                            Content = "",
                            Position = 2,
                            SectionId = 20,
                            Title = "Patrick Sébastion nous fait une de ses chasons prefs"
                        },
                        new
                        {
                            Id = 56,
                            AuthorId = 4,
                            Content = "",
                            Position = 0,
                            SectionId = 21,
                            Title = "Tout le monde se déanche, c'est la fête ce soir"
                        },
                        new
                        {
                            Id = 57,
                            AuthorId = 1,
                            Content = "",
                            Position = 0,
                            SectionId = 22,
                            Title = "Gnegnegne monsieur je sais tout"
                        },
                        new
                        {
                            Id = 58,
                            AuthorId = 2,
                            Content = "",
                            Position = 0,
                            SectionId = 23,
                            Title = "Ouais bha au moins je sais ce qu'il faut faire"
                        },
                        new
                        {
                            Id = 59,
                            AuthorId = 4,
                            Content = "",
                            Position = 1,
                            SectionId = 23,
                            Title = "On veut pas t'entendre toi"
                        },
                        new
                        {
                            Id = 60,
                            AuthorId = 3,
                            Content = "",
                            Position = 2,
                            SectionId = 23,
                            Title = "mais t'es qui toi d'abord"
                        },
                        new
                        {
                            Id = 61,
                            AuthorId = 2,
                            Content = "",
                            Position = 0,
                            SectionId = 24,
                            Title = "Mais juste ftg enfait"
                        },
                        new
                        {
                            Id = 62,
                            AuthorId = 3,
                            Content = "",
                            Position = 1,
                            SectionId = 24,
                            Title = "Ok je me casse"
                        },
                        new
                        {
                            Id = 63,
                            AuthorId = 4,
                            Content = "",
                            Position = 0,
                            SectionId = 25,
                            Title = "On pare pas sur les mères"
                        },
                        new
                        {
                            Id = 64,
                            AuthorId = 2,
                            Content = "",
                            Position = 1,
                            SectionId = 25,
                            Title = "Me donne pas d'ordres"
                        },
                        new
                        {
                            Id = 65,
                            AuthorId = 3,
                            Content = "",
                            Position = 2,
                            SectionId = 25,
                            Title = "Tu vas te calmer toi"
                        },
                        new
                        {
                            Id = 66,
                            AuthorId = 4,
                            Content = "",
                            Position = 0,
                            SectionId = 26,
                            Title = "Parfait pour une fondue"
                        });
                });

            modelBuilder.Entity("prid_2021_a06.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "EPFC"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ULB"
                        });
                });

            modelBuilder.Entity("prid_2021_a06.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TableId = 5,
                            Title = "Backlog"
                        },
                        new
                        {
                            Id = 2,
                            TableId = 5,
                            Title = "Dev in progress"
                        },
                        new
                        {
                            Id = 3,
                            TableId = 5,
                            Title = "To test"
                        },
                        new
                        {
                            Id = 4,
                            TableId = 5,
                            Title = "Testing in progress"
                        },
                        new
                        {
                            Id = 5,
                            TableId = 5,
                            Title = "Ready for release"
                        },
                        new
                        {
                            Id = 6,
                            TableId = 5,
                            Title = "Release in progress"
                        },
                        new
                        {
                            Id = 7,
                            TableId = 4,
                            Title = "Things to do"
                        },
                        new
                        {
                            Id = 8,
                            TableId = 4,
                            Title = "In progress"
                        },
                        new
                        {
                            Id = 9,
                            TableId = 4,
                            Title = "Completed"
                        },
                        new
                        {
                            Id = 10,
                            TableId = 4,
                            Title = "Bug Fixing"
                        },
                        new
                        {
                            Id = 11,
                            TableId = 4,
                            Title = "Bug fixed"
                        },
                        new
                        {
                            Id = 12,
                            TableId = 1,
                            Title = "Lancer le cochonet"
                        },
                        new
                        {
                            Id = 13,
                            TableId = 1,
                            Title = "Joueur la partie"
                        },
                        new
                        {
                            Id = 14,
                            TableId = 1,
                            Title = "Changer de coté en prenant du temps pcq on est vieux"
                        },
                        new
                        {
                            Id = 15,
                            TableId = 1,
                            Title = "Gagner la partie"
                        },
                        new
                        {
                            Id = 16,
                            TableId = 1,
                            Title = "C'est l'heure du ricard"
                        },
                        new
                        {
                            Id = 17,
                            TableId = 2,
                            Title = "Les cabines"
                        },
                        new
                        {
                            Id = 18,
                            TableId = 2,
                            Title = "La plage nudiste"
                        },
                        new
                        {
                            Id = 19,
                            TableId = 2,
                            Title = "Le restaurant nudiste"
                        },
                        new
                        {
                            Id = 20,
                            TableId = 2,
                            Title = "Le carrefour nudist"
                        },
                        new
                        {
                            Id = 21,
                            TableId = 2,
                            Title = "Le club nudist"
                        },
                        new
                        {
                            Id = 22,
                            TableId = 3,
                            Title = "ON DOIT PAS FAIRE COMME CA"
                        },
                        new
                        {
                            Id = 23,
                            TableId = 3,
                            Title = "Toi personne t'ecoute"
                        },
                        new
                        {
                            Id = 24,
                            TableId = 3,
                            Title = "ON VEUT PAS DE TON AVIS"
                        },
                        new
                        {
                            Id = 25,
                            TableId = 3,
                            Title = "Ta mère est moche d'abord"
                        },
                        new
                        {
                            Id = 26,
                            TableId = 3,
                            Title = "Tu veux du pain ????"
                        });
                });

            modelBuilder.Entity("prid_2021_a06.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("View")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Club de pétanque",
                            UserId = 5,
                            View = 0
                        },
                        new
                        {
                            Id = 2,
                            Title = "Club des nudistes fous",
                            UserId = 4,
                            View = 3
                        },
                        new
                        {
                            Id = 3,
                            TeamId = 1,
                            Title = "App de rageux",
                            UserId = 1,
                            View = 2
                        },
                        new
                        {
                            Id = 4,
                            TeamId = 2,
                            Title = "Call auf duty",
                            UserId = 2,
                            View = 1
                        },
                        new
                        {
                            Id = 5,
                            TeamId = 1,
                            Title = "Stellar astronomy",
                            UserId = 3,
                            View = 2
                        });
                });

            modelBuilder.Entity("prid_2021_a06.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Projekt-Team"
                        },
                        new
                        {
                            Id = 2,
                            Name = "A-Team"
                        });
                });

            modelBuilder.Entity("prid_2021_a06.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Pseudo")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin@epfc.eu",
                            FirstName = "Ad",
                            LastName = "Min",
                            Password = "21232f297a57a5a743894a0e4a801fc3",
                            Pseudo = "admin",
                            Role = 2
                        },
                        new
                        {
                            Id = 2,
                            Email = "Benoit@epfc.eu",
                            FirstName = "Benoit",
                            LastName = "Penelle",
                            Password = "7fe4771c008a22eb763df47d19e2c6aa",
                            Pseudo = "ben",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            Email = "Bruno@epfc.eu",
                            FirstName = "Bruno",
                            LastName = "Lacroix",
                            Password = "e3928a3bc4be46516aa33a79bbdfdb08",
                            Pseudo = "bruno",
                            Role = 0
                        },
                        new
                        {
                            Id = 4,
                            Email = "Gautier@epfc.eu",
                            FirstName = "Gautier",
                            LastName = "Kiss",
                            Password = "bef19c64c8126fdc78911de3c7e50f1e",
                            Pseudo = "gautier",
                            Role = 0
                        },
                        new
                        {
                            Id = 5,
                            Email = "Quentin@epfc.eu",
                            FirstName = "Quentin",
                            LastName = "Locht",
                            Password = "c7f413a4f6f4a658c24f0a437666089e",
                            Pseudo = "quentin",
                            Role = 2
                        });
                });

            modelBuilder.Entity("prid_2021_a06.Models.UserCard", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "CardId");

                    b.HasIndex("CardId");

                    b.ToTable("UserCard");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CardId = 3
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 6
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 7
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 9
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 18
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 20
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 29
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 33
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 37
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 44
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 45
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 60
                        },
                        new
                        {
                            UserId = 1,
                            CardId = 63
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 1
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 8
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 9
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 10
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 21
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 23
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 26
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 36
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 41
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 43
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 57
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 60
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 63
                        },
                        new
                        {
                            UserId = 2,
                            CardId = 66
                        },
                        new
                        {
                            UserId = 3,
                            CardId = 1
                        },
                        new
                        {
                            UserId = 3,
                            CardId = 8
                        },
                        new
                        {
                            UserId = 3,
                            CardId = 10
                        },
                        new
                        {
                            UserId = 3,
                            CardId = 15
                        },
                        new
                        {
                            UserId = 3,
                            CardId = 20
                        },
                        new
                        {
                            UserId = 3,
                            CardId = 26
                        },
                        new
                        {
                            UserId = 3,
                            CardId = 35
                        },
                        new
                        {
                            UserId = 3,
                            CardId = 58
                        },
                        new
                        {
                            UserId = 3,
                            CardId = 61
                        },
                        new
                        {
                            UserId = 3,
                            CardId = 62
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 18
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 21
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 27
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 28
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 33
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 39
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 44
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 46
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 51
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 55
                        },
                        new
                        {
                            UserId = 4,
                            CardId = 62
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 2
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 3
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 6
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 9
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 11
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 13
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 17
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 38
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 41
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 42
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 51
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 55
                        },
                        new
                        {
                            UserId = 5,
                            CardId = 56
                        });
                });

            modelBuilder.Entity("prid_2021_a06.Models.UserOrganization", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "OrganizationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("UserOrganization");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            OrganizationId = 1
                        },
                        new
                        {
                            UserId = 1,
                            OrganizationId = 2
                        });
                });

            modelBuilder.Entity("prid_2021_a06.Models.UserTable", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "TableId");

                    b.HasIndex("TableId");

                    b.ToTable("UserTable");

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            TableId = 1
                        },
                        new
                        {
                            UserId = 2,
                            TableId = 3
                        },
                        new
                        {
                            UserId = 2,
                            TableId = 4
                        },
                        new
                        {
                            UserId = 2,
                            TableId = 5
                        },
                        new
                        {
                            UserId = 1,
                            TableId = 1
                        },
                        new
                        {
                            UserId = 1,
                            TableId = 3
                        },
                        new
                        {
                            UserId = 1,
                            TableId = 4
                        },
                        new
                        {
                            UserId = 1,
                            TableId = 5
                        },
                        new
                        {
                            UserId = 4,
                            TableId = 1
                        },
                        new
                        {
                            UserId = 4,
                            TableId = 2
                        },
                        new
                        {
                            UserId = 4,
                            TableId = 4
                        },
                        new
                        {
                            UserId = 3,
                            TableId = 3
                        },
                        new
                        {
                            UserId = 3,
                            TableId = 4
                        },
                        new
                        {
                            UserId = 3,
                            TableId = 5
                        },
                        new
                        {
                            UserId = 5,
                            TableId = 1
                        },
                        new
                        {
                            UserId = 5,
                            TableId = 2
                        },
                        new
                        {
                            UserId = 5,
                            TableId = 3
                        },
                        new
                        {
                            UserId = 5,
                            TableId = 5
                        });
                });

            modelBuilder.Entity("prid_2021_a06.Models.UserTeam", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("UserTeam");

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            UserId = 2,
                            TeamId = 2
                        },
                        new
                        {
                            UserId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            UserId = 1,
                            TeamId = 2
                        },
                        new
                        {
                            UserId = 4,
                            TeamId = 2
                        },
                        new
                        {
                            UserId = 3,
                            TeamId = 2
                        },
                        new
                        {
                            UserId = 5,
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("prid_2021_a06.Models.Card", b =>
                {
                    b.HasOne("prid_2021_a06.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("prid_2021_a06.Models.Section", "Section")
                        .WithMany("Cards")
                        .HasForeignKey("SectionId");
                });

            modelBuilder.Entity("prid_2021_a06.Models.Section", b =>
                {
                    b.HasOne("prid_2021_a06.Models.Table", "Table")
                        .WithMany("Sections")
                        .HasForeignKey("TableId");
                });

            modelBuilder.Entity("prid_2021_a06.Models.Table", b =>
                {
                    b.HasOne("prid_2021_a06.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("prid_2021_a06.Models.Team", "Team")
                        .WithMany("TablesTeam")
                        .HasForeignKey("TeamId");

                    b.HasOne("prid_2021_a06.Models.User", "Owner")
                        .WithMany("TablesOwned")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("prid_2021_a06.Models.Team", b =>
                {
                    b.HasOne("prid_2021_a06.Models.Organization", "Organization")
                        .WithMany("Teams")
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("prid_2021_a06.Models.UserCard", b =>
                {
                    b.HasOne("prid_2021_a06.Models.Card", "Card")
                        .WithMany("UsersIn")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("prid_2021_a06.Models.User", "User")
                        .WithMany("CardsIn")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("prid_2021_a06.Models.UserOrganization", b =>
                {
                    b.HasOne("prid_2021_a06.Models.Organization", "Organization")
                        .WithMany("UsersIn")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("prid_2021_a06.Models.User", "User")
                        .WithMany("OrganizationsIn")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("prid_2021_a06.Models.UserTable", b =>
                {
                    b.HasOne("prid_2021_a06.Models.Table", "Table")
                        .WithMany("UsersIn")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("prid_2021_a06.Models.User", "User")
                        .WithMany("TablesIn")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("prid_2021_a06.Models.UserTeam", b =>
                {
                    b.HasOne("prid_2021_a06.Models.Team", "Team")
                        .WithMany("UsersIn")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("prid_2021_a06.Models.User", "User")
                        .WithMany("TeamsIn")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
